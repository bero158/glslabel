# coding: utf-8

"""
    MyGLS API

    API for MyGLS services

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.print_labels_request import PrintLabelsRequest

class TestPrintLabelsRequest(unittest.TestCase):
    """PrintLabelsRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PrintLabelsRequest:
        """Test PrintLabelsRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PrintLabelsRequest`
        """
        model = PrintLabelsRequest()
        if include_optional:
            return PrintLabelsRequest(
                username = '',
                password = [
                    56
                    ],
                parcel_list = [
                    openapi_client.models.parcel.Parcel(
                        client_number = 56, 
                        client_reference = '', 
                        count = 56, 
                        cod_amount = 1.337, 
                        cod_reference = '', 
                        cod_currency = '', 
                        content = '', 
                        pickup_date = '', 
                        pickup_address = openapi_client.models.address.Address(
                            name = '', 
                            street = '', 
                            house_number = '', 
                            house_number_info = '', 
                            city = '', 
                            zip_code = '', 
                            country_iso_code = '', 
                            contact_name = '', 
                            contact_phone = '', 
                            contact_email = '', ), 
                        delivery_address = openapi_client.models.address.Address(
                            name = '', 
                            street = '', 
                            house_number = '', 
                            house_number_info = '', 
                            city = '', 
                            zip_code = '', 
                            country_iso_code = '', 
                            contact_name = '', 
                            contact_phone = '', 
                            contact_email = '', ), 
                        service_list = [
                            openapi_client.models.service.Service(
                                adr_parameter = '', 
                                aos_parameter = '', 
                                cs1_parameter = '', 
                                dds_parameter = '', 
                                dpv_parameter = '', 
                                fds_parameter = '', 
                                fss_parameter = '', 
                                ins_parameter = '', 
                                mmp_parameter = '', 
                                psd_parameter = '', 
                                sds_parameter = '', 
                                sm1_parameter = '', 
                                sm2_parameter = '', 
                                szl_parameter = '', 
                                value = '', )
                            ], 
                        sender_identity_card_number = '', 
                        pickup_type = 56, )
                    ],
                print_position = 56,
                show_print_dialog = True,
                type_of_printer = ''
            )
        else:
            return PrintLabelsRequest(
        )
        """

    def testPrintLabelsRequest(self):
        """Test PrintLabelsRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
